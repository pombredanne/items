Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.synced_folder ENV['GOPATH'], "/media/sf_GOPATH0", SharedFoldersEnableSymlinksCreate: false
  config.ssh.keep_alive = true

  config.vm.provider "virtualbox" do |v|
    v.linked_clone = true
    v.memory = 6144
    v.customize ["modifyvm", :id, "--vram", "256"]
    v.cpus = 1
    v.customize ["modifyvm", :id, "--accelerate3d", "on"]
  end

  config.vm.define "linux" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true"}
  end

  #TODO: partially broken
  config.vm.define "pkg_config" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true", "QT_PKG_CONFIG" => "true"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true", "QT_PKG_CONFIG" => "true"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "DESKTOP" => "true", "QT_PKG_CONFIG" => "true"}
  end

  config.vm.define "android" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "ANDROID" => "true"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "ANDROID" => "true"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "ANDROID" => "true"}
  end

  config.vm.define "windows_32_shared" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "386"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "386"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "386"}
  end

  config.vm.define "windows_32_static" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "386"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "386"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "386"}
  end

  config.vm.define "windows_64_shared" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "amd64"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "amd64"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "false", "QT_MXE_ARCH" => "amd64"}
  end

  config.vm.define "windows_64_static" do |m|
    m.vm.provision "shell", path: "../pre.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "amd64"}
    m.vm.provision "shell", path: "../../ci/linux.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "amd64"}
    m.vm.provision "shell", path: "../past.sh", privileged: false, env: {"OS" => "linux", "QT_MXE" => "true", "QT_MXE_STATIC" => "true", "QT_MXE_ARCH" => "amd64"}
  end

  #TODO: desktop + webkit
  #TODO: android + openssl
  #TODO: android x86
  #TODO: sailfish
  #TODO: rpi
  #TODO: asteroid

end
